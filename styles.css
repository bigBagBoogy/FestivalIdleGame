 body {  
  background-image: url("images/background4.png");  
  background-repeat: no-repeat;
  height: 4358px;
  width: 1080; /* Height of your background image */
    overflow-y: scroll;      /*Enable vertical scrolling */
    overflow-x: hidden;
  /*background-size: cover;*/ /* this works great for desktop! Or, on desktop, press CTRL +*/

} 

  
   #scoreboard-bar {
    position: fixed;  /*Position the scoreboard bar at the top of the screen */
    top: 0; 
    flex-direction: column;
    /*margin-left: -10px; */
    width: max-content;  /*Set the width to 100% */
     /* Display the scoreboard bar as a flexbox container*/
    justify-content: space-between;
    align-items: center;
    background-color: #520052;
    padding: 10px;
    padding-bottom: 50px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); 
    z-index: 5;
}

 .score {
  color: #ffffff;
  font-weight: bold;
  font-size: 38px;
  margin-top: 20px;
  margin-bottom: 20px;  
  margin-left: 10px; /*Add some left margin for spacing */
  margin-right: 20px;
 }
.level {
 
  color: #ffffff;

  font-size: 38px;
  margin-right: 20px;  /*Add some right margin for spacing between .level and .line-up */
} 

.line-up { 
  color: #ffffff;
  font-size: 38px;
  margin-right: 20px;  
}
.top-scores-link {
    color: #deeeff;
    text-decoration: none;
    font-size: 36px;
    margin-right: 10px; /* Add some right margin for spacing */
}
/* Responsive adjustments for mobile devices */
@media (max-width: 768px) {
  #scoreboard-bar {
      flex-direction: column; /* Stack elements vertically on smaller screens*/ 
      align-items: center;
      padding: 10px 0; /* Adjust top and bottom padding */
      /* In the CSS shorthand property for padding, the values are specified in the following order: 1. Top padding 2. Right padding 3. Bottom padding 4. Left padding. So, in the case of padding: 10px 0;, it means: 10px of padding for the top and bottom, and 0 padding for the right and left. The 0 value means that there is no padding on the right and left sides. It's equivalent to writing padding: 10px 0 10px 0;, but since the top and bottom values are the same, we can shorten it to padding: 10px 0;. So, the element will have 10 pixels of padding at the top and bottom but no padding on the right and left sides. This is useful for creating spacing between elements vertically while keeping them close together horizontally. */
  }
  .score, .top-scores-link {
      margin: 5px 0; /* Add vertical margin between elements */
  }
}
.top-scores-link:hover {
    text-decoration: underline;
}
 .responsive {
  width: 100%;   
  max-width: 1080px; 
}/* Adjust the top position to your liking 
    right: 15px; /* Adjust the right position to your liking 
    width: 90px; /* Adjust the width to your desired size 
    height: 90px; /* Adjust the height to your desired size /
    cursor: pointer;
    /* Add any other styles you want for the button here 
  
  left: 50%;
  transform: translateX(-50%);
  /* ... other styles ... 
}*/
#podium-main {  
  position: absolute;
  width: 900px;
  top: 200px;
  left: 178px;
  z-index: 0.5;
  /*transform: translateX(100px);  Adjust the value as needed */
 }

 #balanceButton {
  position: fixed;
  top: 75px; 
  right: 730px; 
  background-color: #ff0055ca;
  color: white;
  font-weight: bold;
  font-size: 20px;
  stroke: black;
  padding: 20px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  z-index: 6;
 }

 #withdrawButton {
  position: fixed;
  top: 75px; 
  right: 595px; 
  background-color: #f2ff00ca;
  color: white;
  font-weight: bold;
  font-size: 20px;
  stroke: black;
  padding: 20px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  z-index: 6;
 }




 #saveProgressButton {
  position: fixed;
  top: 75px; 
  right: 215px; 
  background-color: #a4da01;
  color: white;
  font-weight: bold;
  font-size: 20px;
  stroke: black;
  padding: 20px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  z-index: 6;
 }
 #getPlayerProgressButton {
  position: fixed;
  top: 75px; 
  right: 405px; 
  background-color: #0a79ff;
  color: white;
  font-weight: bold;
  font-size: 20px;
  padding: 20px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  z-index: 6;


 }
 #connectButton {
  position: fixed;
  top: 70px; 
  right: 15px; 
  width: 90px; 
  height: 90px; 
  cursor: pointer;
  z-index: 6;
 }
 #cheatButton {
  position: fixed;
  top: 70px; 
  right: 105px; 
  width: 100px; 
  height: 90px; 
  cursor: pointer;  
  z-index: 6;
}
#freeCheatButton {
  position: fixed;
  top: 170px; 
  right: 105px; 
  width: 100px; 
  height: 90px; 
  cursor: pointer;  
  z-index: 6;
}
#storylinePopupButton {
  position: fixed;
  top: 170px; 
  right: 205px; 
  width: 100px; 
  height: 90px; 
  cursor: pointer;  
  z-index: 10;
}

  #closeStorylinePopup {
    position: absolute;
    top: 100px;
    right: 220px;
    width: 60px; /* Adjust the width as needed */
    height: 60px; /* Adjust the height as needed */
    background-color: red; /* Set the background color to red */
    color: white; /* Set the text color to white */
    font-size: 80px;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border-radius: 30%; /* Make it a circular button */
    z-index: 10;
  }

#closeCheatPayPopup {
  position: absolute;
  top: 220px;
  right: 250px;
  width: 60px; /* Adjust the width as needed */
  height: 60px; /* Adjust the height as needed */
  background-color: rgb(255, 0, 0); /* Set the background color to red */
  color: white; /* Set the text color to white */
  font-size: 80px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: 20%; /* Make it a circular button */
  z-index: 10;
}
  

#drinksStall {
  position: absolute;
  top: 2190px; 
  left: -40px; 
  width: 600px; 
  height: 600px; 
  cursor: pointer; 
}
#drinksStall.blue {
  filter: drop-shadow(0px 0px 30px #1500ff);    
  /*horizontal offset, vertical offset, blur radius, and color.*/
}

#drinksStall.yellow {
  filter: drop-shadow(0px 0px 30px #fff200); 
}

#drinksStall.red {
  filter: drop-shadow(0px 0px 30px #ff0000); 
}

#drinksStall.purple {
  filter: drop-shadow(0px 0px 30px #c800ff); 
}

#drinksStall.green {
  filter: drop-shadow(0px 0px 30px #00ff08); 
}
#drinksLevelBox {
  color: #ffffff;
  font-weight: bold;
  font-size: 40px;
  margin-top: 20px;
  margin-bottom: 20px;  
  margin-left: 10px; /*Add some left margin for spacing */
  margin-right: 20px;
  position: absolute;
  top: 2670px; 
  left: 10px; 
  width: 150px; 
  height: 50px; 
  cursor: pointer; 
  display: inline-block;
  background-color: rgb(136, 0, 255);
  padding: 10px;
  border-radius: 10px;
  border: 3px solid rgb(0, 0, 0);
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.7);
  margin-left: 10px;
 /* transform-style: preserve-3d;
 transform: rotateX('45deg'); */
}
#upgradeArrow {
  position: absolute; /* Keep the element fixed within the viewport */
  top: 2620px;     /* Adjust this value as needed */
  left: 100px; 
  width: 150px;   
  z-index: 5;
  filter: drop-shadow(0px 0px 10px #000000); 
  animation: moveUpAndDown 1s infinite ease-in-out; /* Apply the animation */ 
}
@keyframes moveUpAndDown {
  0%, 100% { top: 2590px; } /* Start and end position */
  50% { top: 2605px; } /* Middle position */
}

#foodUpgradeArrow {
  position: absolute; /* Keep the element fixed within the viewport */
  top: 3400px;     /* Adjust this value as needed */
  left: 100px; 
  width: 150px;   
  z-index: 5;
  filter: drop-shadow(0px 0px 10px #000000); 
  animation: moveUpAndDownFood 1s infinite ease-in-out; /* Apply the animation */ 
} 
@keyframes moveUpAndDownFood {
  0%, 100% { top: 3370px; } /* Start and end position */
  50% { top: 3355px; } /* Middle position */
}





#foodStall{
  position: absolute;
  top: 2950px; 
  left: -40px; 
  width: 600px; 
  height: 600px; 
  cursor: pointer; 
  max-width: 100%;
  height: auto;
}

/* this is old:   #foodStall.blue {
  filter: hue-rotate(240deg) brightness(1.2);
} */
#foodStall.blue {
  filter: drop-shadow(0px 0px 30px #1500ff);    
  /*horizontal offset, vertical offset, blur radius, and color.*/
}
#foodStall.yellow {
  filter: drop-shadow(0px 0px 30px #fff200); 
}

#foodStall.red {
  filter: drop-shadow(0px 0px 30px #ff0000); 
}

#foodStall.purple {
  filter: drop-shadow(0px 0px 30px #c800ff); 
}

#foodStall.green {
  filter: drop-shadow(0px 0px 30px #00ff08); 
}
#foodLevelBox {
  color: #ffffff;
  font-weight: bold;
  font-size: 40px;
  margin-top: 20px;
  margin-bottom: 20px;  
  margin-left: 10px; /*Add some left margin for spacing */
  margin-right: 20px;
  position: absolute;
  top: 3430px; /*480px more than foodStall*/
  left: 10px; 
  width: 150px; 
  height: 50px; 
  cursor: pointer; 
  display: inline-block;
  background-color: rgb(136, 0, 255);
  padding: 10px;
  border-radius: 10px;
  border: 3px solid rgb(0, 0, 0);
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.7);
  margin-left: 10px;
 /* transform-style: preserve-3d;
 transform: rotateX('45deg'); */
}






 
 #button-container1 {  
  display: grid;
  grid-template-columns: 1fr; /* Single column */
  grid-template-rows: repeat(3, auto); /* Three rows */
 
  margin-top:0px; /* Adjust the top margin to 800px */
  left: 18%;
  position: fixed;
  top: calc(100% - 50px + 600px);   
  transform: translate(-50%, -50%);
}

#button-container2 {
  display: grid;
  grid-template-columns: 1fr; 
  grid-template-rows: repeat(3, auto); 
  row-gap: 380px; /* Adjust the gap between rows*/ 

  /* margin: -2500px auto 0; Adjust the top margin to 800px */
  left: 78%;
  position: absolute;
  margin-top: 0px; /* Adjust the top margin to 800px */
  transform: translate(-50%, -50%);
}
.button-container1 img {
  
  padding: 10px 15px;
  border-radius: 15px;
  font-size: 16px;
  cursor: pointer;
  transition: transform 0.2s;
}
.button-container2 img {

   padding: 10px 15px; 
 border-radius: 15px; 
  font-size: 16px;
  cursor: pointer;
  transition: transform 0.2s;
}
  



/*
  button {
    padding: 7px 15px;
    background-color: #3498db;
    color: #ffffff;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 10%;} /* To make buttons take % width of their cell
   */
  
  /* Adjust button size for mobile devices *
  @media (max-width: 768px) {
    .button-container {
      grid-template-columns: 1fr;
    }
  }


  
  img:hover {
    transform: scale(1.2); 

}*/
.popup-container {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
  z-index: 7;
}

.popup-content {
  background-color: #540048;
  padding: 20px;
  font-size: 50px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  text-align: center;
  color: white; 
}

/*

.bottom-bar {
  position: fixed; /* Position the scoreboard bar at the top of the screen *
  bottom: 0; /* Stick the scoreboard bar to the top *
  width: 100%; /* Set the width to 100% *
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #caa5a5;
  padding: 10px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}*/
.storylinePopupDiv2 {
  position: fixed;
  top: 500;
  right: -800px; /* Initially positioned off the screen */
  width: 800px; /* Adjust the width as needed */
  height: 300px; /* Set a minimum height to cover at least the viewport height */
  background-color: transparent;
  
  transition: right 0.4s ease-in-out; /* Add smooth transition animation */
  z-index: 999; /* Ensure the popup is above other content */
}
.cheatPayPopupDiv2{
  position: fixed;
  top: 500;
  right: -800px; /* Initially positioned off the screen */
  width: 800px; /* Adjust the width as needed */
  height: 300px; /* Set a minimum height to cover at least the viewport height */
  background-color: transparent;
  
  transition: right 0.4s ease-in-out; /* Add smooth transition animation */
  z-index: 1000; /* Ensure the popup is above other content */
}
/* Base styling for the cheat silver and gold buttons */
.cheat-button {
  top: 330px;
  right: -100px;
  padding: 50px 20px;
  background: linear-gradient(to bottom, #e6d411, #aaa100);
  border: none;
  color: white;
  font-size: 25px;
  cursor: pointer;
  border-radius: 5px;
  position: relative;
  overflow: hidden;
  margin: 10px;
}

/* Shine effect on hover */
.cheat-button:hover {
  background: linear-gradient(to bottom, #eee, #ccc);
}

/* Shine animation */
.cheat-button:after {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: rgba(255, 255, 255, 0.3);
  transform: rotate(45deg);
  opacity: 0;
  transition: opacity 0.5s, transform 0.5s;
}

.cheat-button:hover:after {
  opacity: 1;
  transform: translate(50%, 50%) rotate(45deg);
}

.storylinePopupDiv {
  top: 500;
  padding: 20px;
  position: relative;
}
/* Close button style */
.close {
  position: absolute;
  top: 20px;
  right: 20px;
  font-size: 100px;
  cursor: pointer;
}
/* Show the popup by adjusting its right position */
.popup2.active {
  right: 0;
}
#storylinePopupText {
  position: absolute;
 top: 60px;
 max-width: 400px;
 right: 300px;
  font-size: 60px;
  font-weight: bold;
}
#cheatPayPopupText {
  position: absolute;
 top: 135px;
 max-width: 400px;
 right: 300px;
  font-size: 55px;
  font-weight: bold;
}


#storylinePopupImage {
    /* max-width: 100%; */
    height: auto;
    width: 800px;
}

#popupText {
    margin-top: 10px;
} 
#cheatPayPopupImage {
  /* max-width: 100%; */
  height: auto;
  width: 800px;
}
